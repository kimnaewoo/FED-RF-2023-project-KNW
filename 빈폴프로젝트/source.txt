const qs = (x) => document.querySelector(x);
const qsa = (x) => document.querySelectorAll(x);

const addEvt = (ele, evt, fn) => ele.addEventListener(evt, fn);
addEvt(window, "DOMContentLoaded", loadFn);
let clickSts = 0;
const TIME_SLIDE = 400;
function loadFn() {
  console.log("로딩완료!");
  const abtn = qsa(".abtn");
  const slide = qs("#slide");
  const indic = qsa(".indic li");
  console.log("대상", abtn, slide, indic);
slide.querySelectorAll("li").forEach((ele, idx) => ele.setAttribute("data-seq", idx));
  abtn.forEach((ele) => addEvt(ele, "click", goSlide));
  function goSlide() {
   if (clickSts) return;
clickSts = 1;
   setTimeout(() => (clickSts = 0), TIME_SLIDE); //해제!
 console.log("나야나!", this, this.classList.contains("ab2"));
 let isRight = this.classList.contains("ab2");
    let eachOne = slide.querySelectorAll("li");
  if (isRight) {
 rightSlide();
 }
   else {
   slide.insertBefore(eachOne[eachOne.length - 1], eachOne[0]);
     slide.style.left = "-100%";
   slide.style.transition = "none";
      setTimeout(() => {
      slide.style.left = "0";
  slide.style.transition = TIME_SLIDE + "ms ease-in-out";
      }, 0);
}
chgIndic(isRight);
   clearAuto();

  }
  function chgIndic(isRight) {
let nowSeq = slide.querySelectorAll("li")[isRight ? 1 : 0].getAttribute("data-seq");

    console.log("현재슬라이드 순번:", nowSeq);
 indic.forEach((ele, idx) => {
      if (idx == nowSeq) ele.classList.add("on");
      else ele.classList.remove("on");
});
  }
  function rightSlide() {
  slide.style.left = "-100%";
  slide.style.transition = TIME_SLIDE + "ms ease-in-out";
  setTimeout(() => {

      slide.appendChild(slide.querySelectorAll("li")[0]);
slide.style.left = "0";
 slide.style.transition = "none";
    }, TIME_SLIDE);
  }
  let autoI;
  let autoT;
function slideAuto() {
    autoI = setInterval(() => {
rightSlide();
 chgIndic(1);
}, 3000);
}
 slideAuto();
function clearAuto() {
  console.log('멈춤!');
clearInterval(autoI);
 clearTimeout(autoT);
autoT = setTimeout(slideAuto,5000);
}
}